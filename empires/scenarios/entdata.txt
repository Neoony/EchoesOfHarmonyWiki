"EntData"
{
	"entity"
	{
		"fields"
		{
			"name"
			{
				"fgdName"	"targetname"
				"type" 		"string"
				"prop"	"m_iName"
				"propType"		"data"
				"defaultValue"	""
			}
			"funcs"
			{
				"type" 		"string"
				"prop"	"m_iszResponseContext"
				"propType"		"data"
				"defaultValue"	""
			}
			"color"
			{
				"type" 		"color"
				"prop" 		"m_clrRender"
				"postSpawn"	"true"
				"propType"		"data"
				"defaultValue"	"255 255 255 255"
			}
			"effects" // stuff like shadow glow nodraw etc. 
			{
				"fgdName"	"effects"
				"type" 		"int"
				"prop" 		"m_fEffects"
				"propType"		"data"
				"defaultValue"	"0"
			}
			"rendermode"
			{
				"fgdName"	"rendermode"
				"type" 		"int"
				"prop" 		"m_nRenderMode"
				"propType"		"data"
				"defaultValue"	"0"
			}
		}
	}
	"map_entity"
	{
		"extend"	"entity"
		"fields"
		{
			"spawnflags"
			{
				"fgdName"	"spawnflags"
				"prop" 	"m_spawnflags"
				"type" 		"int"
				"propType"	"data"
			}
		}
	}
	"building"
	{
		"extend"	"entity"
		"group"		"5"
		"respawnOnMove"	"true"
		"fields"
		{
			"built"
			{
				"prop"	"m_bFullyBuilt"
				"fgdName" 	"startBuilt"  // the fieldname in the fgd file
				"type" 		"int"
			}
			"maxHealth"
			{
				"prop"	"m_iMaxHealth"
				"type" 		"int"
				"postSpawn"	"true"
			}
			"health"
			{
				"prop"	"m_iHealth"
				"type" 		"int"
				"postSpawn"	"true"
			}
			"team"
			{
				"prop" 	"m_iTeamNum"
				"type" 		"int"
			}
		}
	}
	"emp_building_nf_barracks"
	{
		"extend"	"building"
		"respawnOnMove" "true"
	}
	"emp_building_imp_barracks"
	{
		"extend"	"building"
		"respawnOnMove" "true"
	}
	"emp_building_barracks"
	{
		"extend"	"building"
		"respawnOnMove" "true"
	}
	"emp_building_nf_armory"
	{
		"extend"	"building"
	}
	"emp_building_imp_armory"
	{
		"extend"	"building"
	}
	"emp_building_armory"
	{
		"extend"	"building"
	}
	"emp_building_nf_radar"
	{
		"extend"	"building"
	}
	"emp_building_imp_radar"
	{
		"extend"	"building"
	}
	"emp_building_radar"
	{
		"extend"	"building"
	}
	"emp_building_nf_repairstation"
	{
		"extend"	"building"
	}
	"emp_building_imp_repairstation"
	{
		"extend"	"building"
	}
	"emp_building_repairstation"
	{
		"extend"	"building"
	}
	"emp_building_nf_vehiclefactory"
	{
		"extend"	"building"
	}
	"emp_building_imp_vehiclefactory"
	{
		"extend"	"building"
	}
	"emp_building_vehiclefactory"
	{
		"extend"	"building"
	}
	"turret"
	{
		"extend"	"building"
		"fields"
		{
			"level"
			{
				"fgdName"	"level"
				"prop"		"m_iUpgradeLevel"
				"type" 		"int"
			}
			"postTeam"
			{
				"prop" 	"m_iTeamNum"
				"type" 		"int"
				"postSpawn"	"true"
			}
			"model"
			{
				"prop"		"m_ModelName"
				"propType"		"data"
				"type" 		"string"
				"postSpawn"	"true"
			}
		}
	}
	"emp_building_mgturret"
	{
		"extend"	"turret"
	}
	"emp_building_imp_mgturret"
	{
		"extend"	"emp_building_mgturret"
	}
	"emp_building_nf_mgturret"
	{
		"extend"	"emp_building_mgturret"
	}
	
	"emp_building_mlturret"
	{
		"extend"	"turret"
	}
	"emp_building_imp_mlturret"
	{
		"extend"	"emp_building_mlturret"
	}
	"emp_building_nf_mlturret"
	{
		"extend"	"emp_building_mlturret"
	}
	"emp_eng_walls"
	{
		"extend"	"building"
		"fields"
		{
			"model"
			{
				"type" 		"string"
				"prop"		"m_ModelName"
				"propType"		"data"
			}
			"bChunk"
			{
				"type" 		"int"
				"prop"		"m_bChunk"
			}

		}
	}
	"emp_building_nf_wall"
	{
		"extend"	"emp_eng_walls"
	}
	"emp_building_imp_wall"
	{
		"extend"	"emp_eng_walls"
	}
	"emp_imp_commander"
	{
		"extend"	"entity"
		"removable"	"false"
	}
	"emp_nf_commander"
	{
		"extend"	"entity"
		"removable"	"false"
	}
	"emp_cap_model"
	{
		"extend"	"entity"
		"group"	"1"
		"fields"
		{
			"pointNumber"
			{
				"fgdName"	"pointNumber"
				"type" 		"int"
				"prop" 		"m_iCapNumber"
				"propType"		"data"
			}
			"visibleOnMap"
			{
				"fgdName"	"VisibleOnMap"
				"type" 		"int"
				"prop"		"m_bMapVisible"
				"propType"		"data"
			}
			"model"
			{
				"fgdName"	"model"
				"type" 		"string"
				"prop"		"m_sModel1"
				"propType"		"data"
			}
			"model2"
			{
				"fgdName"	"model2"
				"type" 		"string"
				"prop"		"m_sModel2"
				"propType"		"data"
			}
			"model3"
			{
				"fgdName"	"model3"
				"type" 		"string"
				"prop"		"m_sModel3"
				"propType"		"data"
			}
			"team" // used for respawn
			{
				"type" 		"int"
				"prop"		"m_iTeamNum"
				"propType"		"data"
			}
		}
		
	}
	
	"brush"
	{
		"extend" 	"entity"
		"isBrushEntity"	"1"
		"fields"
		{
			"mins"
			{
				"prop"		"m_vecMins"
				"type" 		"vector"
				"postSpawn"	"true"
			}
			"maxs"
			{
				"prop"		"m_vecMaxs"
				"type" 		"vector"
				"postSpawn"	"true"
			}
			"effects"
			{
				"ignore"	"true"
			}
			
		}
	}
	"emp_cap_point"
	{
		"extend"	"brush"
		"group"	"1"
	
		"fields"
		{
			"pointNumber"
			{
				"fgdName"	"pointNumber"
				"type" 		"int"
				"prop" 		"m_iCapNumber"
				"propType"		"data"
			}
			"timeToCap"
			{
				"fgdName"	"timeToCap"
				"type" 		"int"
				"prop"		"m_iTimeToCap"
				"propType"		"data"
			}
			"timeToNeutral"
			{
				"fgdName"	"timeToNeutral"
				"type" 		"int"
				"prop"		"m_iTimeToNeutral"
				"propType"		"data"
			}
			"playersRequiredNF"
			{
				"fgdName"	"playersRequiredNF"
				"type" 		"int"
				"prop"		"m_iNFPlayersRequired"	
				"propType"	"data"
			}
			"playersRequiredImp"
			{
				"fgdName"	"playersRequiredImp"
				"type" 		"int"
				"prop"		"m_iBEPlayersRequired"	
				"propType"		"data"
			}
			"teamOwner"
			{
				"fgdName"	"teamOwner"
				"type" 		"int"
				"prop"		"m_iTeamOwner"	
				"propType"		"data"
			}
			"locationName"
			{
				"fgdName"	"locationName"
				"type" 		"string"
				"prop"		"m_sLocation"	
				"propType"		"data"
				"defaultValue"	""
			}
			"resToGiveNF"
			{
				"fgdName"	"resToGiveNF"
				"type" 		"float"
				"prop"		"m_fResToGiveNF"	
				"propType"		"data"
			}
			"resToGiveImp"
			{
				"fgdName"	"resToGiveImp"
				"type" 		"float"
				"prop"		"m_fResToGiveBE"	
				"propType"		"data"
			}
			"reinfToTakeNF"
			{
				"fgdName"	"reinfToTakeNF"
				"type" 		"float"
				"prop"		"m_flReinforcementsToTakeNF"	
				"propType"		"data"
			}
			"reinfToTakeImp"
			{
				"fgdName"	"reinfToTakeImp"
				"type" 		"float"
				"prop"		"m_flReinforcementsToTakeBE"	
				"propType"		"data"
			}
			"canNFCap"
			{
				"fgdName"	"canNFCap"
				"type" 		"int"
				"prop"		"m_iNFCappable"
				"propType"		"data"
			}
			"canImpCap"
			{
				"fgdName"	"canImpCap"
				"type" 		"int"
				"prop"		"m_iBECappable"
				"propType"		"data"
			}
			
		}
		
	}

	"emp_info_player_NF"
	{
		"extend"	"entity"
		"group"	"1"
		"respawnOnMove" "true"
		"fields"
		{
			"pointNumber"
			{
				"fgdName"	"pointNumber"
				"type" 		"int"
				"prop" 		"m_iCapNumber"
				"propType"		"data"
			}
			"spawnEnabled"
			{
				"fgdName"	"spawnEnabled"
				"type" 		"int"
				"prop" 		"m_bEnabled"
				"propType"		"data"
			}
			
		}
	}
	"emp_info_player_Imp"
	{
		"extend" "emp_info_player_NF"
	}
	"emp_nf_ammo_crate"
	{
		"extend"	"entity"
		"group"	"1"
		"fields"
		{
			"pointNumber"
			{
				"fgdName"	"pointNumber"
				"type" 		"int"
				"prop" 		"m_iCapNumber"
				"propType"		"data"
			}
			"disabled"
			{
				"fgdName"	"startDisabled"
				"type" 		"int"
				"prop"		"m_bDisabled"
				"propType"		"data"
			}
			"model"
			{
				"fgdName"	"model"
				"type" 		"string"
				"prop" 		"m_ModelName"
				"propType"		"data"
			}
		}
	}
	"emp_imp_ammo_crate"
	{
		"extend" "emp_nf_ammo_crate"
	}
	"emp_nf_health_crate"
	{
		"extend" "emp_nf_ammo_crate"
	}
	"emp_imp_health_crate"
	{
		"extend" "emp_nf_ammo_crate"
	}
	
	"emp_building_refinery"
	{
		"extend" 	"building"
		"group"	"3"
		"fields"
		{
			"target"
			{
				"fgdName"	"target"
				"type" 		"string"
				"prop"	"m_target"
				"propType"		"data"
			}
		}
	}
	"emp_building_nf_refinery"
	{
		"extend" 	"emp_building_refinery"
		
	}
	"emp_building_imp_refinery"
	{
		"extend" 	"emp_building_refinery"
	}
	"emp_resource_point"
	{
		"extend"	"entity"
		"moveable"	"0"
		"group"	"2"
		"fields"
		{
			"enabled"
			{
				"fgdName"	"Enabled"
				"type" 		"int"
				"prop"	"m_bEnabled"
				"propType"		"data"
			}
			"resPerSecond"
			{
				"fgdName"	"ResourcesSecond"
				"type" 		"float"
				"prop"		"m_flResSecond"
				"propType"		"data"
			}
		}
	}
	"emp_resource_point_prop"
	{
		"extend"	"entity"
		"moveable"	"0"
		"group"	"2"
		"fields"
		{
			"enabled"
			{
				"fgdName"	"Enabled"
				"type" 		"int"
				"prop" 		"m_bEnabled"
				"propType"		"data"
			}
			"model"
			{
				"fgdName"	"model"
				"type" 		"string"
				"prop" 		"m_ModelName"
				"propType"		"data"
			}
		}
	}
	"env_smokestack"
	{
		"extend"	"entity"
		"version"	"0.22"
		"group"	"2"
		"fields"
		{
			"material"
			{
				"fgdName"	"SmokeMaterial"
				"type" 		"string"
				"prop" 		"m_strMaterialModel"
				"propType"		"data"
			}
			"startSize"
			{
				"fgdName"	"StartSize"
				"type" 		"float"
				"prop" 		"m_StartSize"
				"propType"		"data"
			}
			"endSize"
			{
				"fgdName"	"EndSize"
				"type" 		"float"
				"prop" 		"m_EndSize"
				"propType"		"data"
			}
			"emit"
			{
				"fgdName"	"InitialState"
				"type" 		"int"
				"prop" 		"m_bEmit"
				"propType"		"data"
			}
			"baseSpread"
			{
				"fgdName"	"BaseSpread"
				"type" 		"float"
				"prop" 		"m_flBaseSpread"
				"propType"		"data"
			}
			"twist"
			{
				"fgdName"	"Twist"
				"type" 		"float"
				"prop" 		"m_flTwist"
				"propType"		"data"
				"defaultValue"	"0"
			}
			"roll"
			{
				"fgdName"	"Roll"
				"type" 		"float"
				"prop" 		"m_flRollSpeed"
				"propType"		"data"
				"defaultValue"	"0"
			}
			"windAngle"
			{
				"fgdName"	"WindAngle"
				"type" 		"int"
				"prop" 		"m_WindAngle"
				"propType"		"data"
				"defaultValue"	"0"
			}
			"windSpeed"
			{
				"fgdName"	"WindSpeed"
				"type" 		"int"
				"prop" 		"m_WindSpeed"
				"propType"		"data"
				"defaultValue"	"0"
			}
			"jetLength"
			{
				"fgdName"	"JetLength"
				"type" 		"float"
				"prop" 		"m_JetLength"
				"propType"		"data"
			}
			"spreadSpeed"
			{
				"fgdName"	"SpreadSpeed"
				"type" 		"float"
				"prop" 		"m_SpreadSpeed"
				"propType"		"data"
			}
			"speed"
			{
				"fgdName"	"Speed"
				"type" 		"float"
				"prop" 		"m_Speed"
				"propType"		"data"
			}
			"rate"
			{
				"fgdName"	"Rate"
				"type" 		"float"
				"prop" 		"m_Rate"
				"propType"		"data"
			}
			

		}
	}
	"emp_eng_map_model"
	{
		"extend"	"entity"
		"version"	"0.23"
		"fields"
		{
			"model"
			{
				"prop"		"m_ModelName"
				"propType"		"data"
				"fgdName"	"model"
				"type" 		"string"
			}
			"initialOwner"
			{
				"fgdName"	"initialOwner"
				"type" 		"int"
				"prop"		"m_iInitialOwner"	
				"propType"		"data"
			}
			"team"
			{
				"type" 		"int"
				"prop"		"m_iTeamNum"	
				"propType"		"data"
				"postSpawn"	"true"
			}
			"changeOwner"
			{
				"fgdName"	"changeOwner"
				"type" 		"int"
				"prop"		"m_bChangeOwner"	
				"propType"		"data"
				"defaultValue"	"0"
			}
			"raiseOnBuild"
			{
				"fgdName"	"raiseOnBuild"
				"type" 		"int"
				"prop"		"m_bRaiseOnBuild"	
				"propType"		"data"
				"defaultValue"	"0"
			}
			"solidOnSpawn"
			{
				"fgdName"	"solidOnSpawn"
				"type" 		"int"
				"prop"		"m_bSolidOnSpawn"	
				"propType"		"data"
				"defaultValue"	"0"
			}
			
			"visibleToEnemy"
			{
				"fgdName"	"visibleToEnemy"
				"type" 		"int"
				"prop"		"m_bVisibleToEnemy"	
				"propType"		"data"
				"defaultValue"	"0"
			}
			"timeToRespawn"
			{
				"fgdName"	"timeToRespawn"
				"type" 		"float"
				"prop"		"m_flRespawn"	
				"propType"		"data"
			}
			"Health"
			{
				"fgdName"	"Health"
				"prop"	"m_iInitialHealth"
				"type" 		"int"
				"propType"		"data"
			}
			"maxHealth"
			{
				"fgdName"	"MaximumHealth"
				"type" 		"int"
				"prop"		"m_iMaxHealth"	
				"propType"		"data"
			}
			"repairMultiplier"
			{
				"fgdName"	"repairMultiplier"
				"type" 		"int"
				"prop"		"m_iRepairMultiplier"	
				"propType"		"data"
				"defaultValue"	"1"
			}
			"damageMultiplier"
			{
				"fgdName"	"damageMultiplier"
				"type" 		"int"
				"prop"		"m_iDamageMultiplier"	
				"propType"		"data"
				"defaultValue"	"1"
			}
			"grenadierOnly"
			{
				"fgdName"	"GrenadierOnly"
				"type" 		"int"
				"prop"		"m_bGrenadierOnly"	
				"propType"		"data"
				"defaultValue"	"0"
			}
			"solidOnRespawn"
			{
				"fgdName"	"SolidOnRespawn"
				"type" 		"int"
				"prop"		"m_bSolidOnRespawn"	
				"propType"		"data"
				"defaultValue"	"0"
			}

		}
	}

	"npc_maker"
	{
		"extend"	"entity"
		"version"	"0.28"
		"fields"
		{
			"NPCType"
			{
				"fgdName"	"NPCType"
				"type" 		"string"
				"prop"		"m_iszNPCClassname"
				"propType"		"data"
				
			}
			"MaxNPCCount"
			{
				"fgdName"	"MaxNPCCount"
				"type" 		"int"
				"prop"		"m_nMaxNumNPCs"
				"propType"		"data"
			}
			"MaxLiveChildren"
			{
				"fgdName"	"MaxLiveChildren"
				"type" 		"int"
				"prop"		"m_nMaxLiveChildren"
				"propType"		"data"
			}
			"SpawnFrequency"
			{
				"fgdName"	"SpawnFrequency"
				"type" 		"float"
				"prop"		"m_flSpawnFrequency"
				"propType"		"data"
			}
			"StartDisabled"
			{
				"fgdName"	"StartDisabled"
				"type" 		"int"
				"prop"		"m_bDisabled"
				"propType"		"data"
			}
			
		}
		
	}
	"prop_base"
	{
		"extend"	"entity"
		"version"	"0.29"
		"fields"
		{
			"model"
			{
				"fgdName"	"model"
				"type" 		"string"
				"prop" 		"m_ModelName"
				"propType"		"data"
			}
			"Skin"
			{
				"fgdName"	"skin"
				"type" 		"int"
				"prop" 		"m_nSkin"
				"propType"		"data"
				"defaultValue"	"0"
			}
			"MoveType"
			{
				"type" 		"int"
				"prop" 		"m_MoveType"
				"propType"		"data"
			}
			"SolidType"
			{
				"fgdName"	"solid"
				"type" 		"int"
				"prop"		"m_nSolidType"
				"propType"		"data"
			}
			"CollisionGroup"
			{
				"prop"	"m_CollisionGroup"
				"type" 		"int"
				"propType"		"data"
				"postSpawn"	"true"
				"defaultValue"	"0"
			}
			"Health"
			{
				"prop"	"m_iHealth"
				"type" 		"int"
				"propType"		"data"
				"postSpawn"	"true"
				"defaultValue"	"0"
			}
			"TakeDamage"
			{
				"prop"	"m_takedamage"
				"type" 		"int"
				"propType"		"data"
				"postSpawn"	"true"
				"defaultValue"	"1"
			}
			"ShadowCastDistance"
			{
				"fgdName"	"shadowcastdist"
				"type" 		"float"
				"prop" 		"m_flShadowCastDistance"
				"propType"		"data"
				"defaultValue"	"0.000000"
			}
			"team"
			{
				"prop" 	"m_iTeamNum"
				"type" 		"int"
				"defaultValue"	"0"
			}
			
			
			
		}
	}
	"prop_dynamic"
	{
		"extend" 	"prop_base"
		"fields"
		{
			"StartDisabled"
			{
				"fgdName"	"StartDisabled"
				"type" 		"int"
				"prop"		"m_bStartDisabled"
				"propType"		"data"
				"defaultValue"	"0"
			}
			
			
		}
		
	}
	// uses prop_physics_override to spawn in 
	"prop_physics"
	{
		"extend" 	"prop_base"
		"version"	"0.48"
		"fields"
		{
			"MassScale"
			{
				"fgdName"	"massscale"
				"type" 		"float"
				"prop" 		"m_massScale"
				"propType"		"data"
			}
			"InertiaScale"
			{
				"fgdName"	"inertiascale"
				"type" 		"float"
				"prop" 		"m_inertiaScale"
				"propType"		"data"
			}
			"DamageType"
			{
				"fgdName"	"Damagetype"
				"type" 		"int"
				"prop" 		"m_damageType"
				"propType"		"data"
			}
			
		}
		
	}
	"emp_vehicle"
	{
		"extend"	"entity"
		"version"	"0.40"
		"fields"
		{
			"team"
			{
				"prop" 	"m_iTeamNum"
				"type" 		"int"
			}

			"armorFront"
			{
				"prop"	"m_iArmorInches"
				"type" 		"int"
				"arrayIndex" 	"0"
			}
			"armorRear"
			{
				"prop"	"m_iArmorInches"
				"type" 		"int"
				"arrayIndex" 	"1"
			}
			"armorLeft"
			{
				"prop"	"m_iArmorInches"
				"type" 		"int"
				"arrayIndex" 	"2"
			}
			"armorRight"
			{
				"prop"	"m_iArmorInches"
				"type" 		"int"
				"arrayIndex" 	"3"
			}
			"armorHealthFront"
			{
				"prop"	"m_flVehicleArmor"
				"type" 		"float"
				"arrayIndex" 	"0"
			}
			"armorHealthBack"
			{
				"prop"	"m_flVehicleArmor"
				"type" 		"float"
				"arrayIndex" 	"1"
			}
			"armorHealthLeft"
			{
				"prop"	"m_flVehicleArmor"
				"type" 		"float"
				"arrayIndex" 	"2"
			}
			"armorHealthRight"
			{
				"prop"	"m_flVehicleArmor"
				"type" 		"float"
				"arrayIndex" 	"3"
			}
			"maxHealth"
			{
				"prop"	"m_flMaxTotalHealth"
				"type" 		"float"
				"postSpawn"	"true"
			}
			"health"
			{
				"prop"	"m_flTotalHealth"
				"type" 		"float"
				"postSpawn"	"true"
			}
			
			
		}
	
	}
	"light_dynamic"
	{
		"extend"	"map_entity"
		"customOnly"	"1"
		"fields"
		{
			"on"
			{
				"prop"	"m_On"
				"type" 		"int"
				"propType"	"data"
			}
			"distance"
			{
				"fgdName"	"distance"
				"prop"	"m_Radius"
				"type" 		"float"
			}
			"brightness"
			{
				"fgdName"	"brightness"
				"prop"	"m_Exponent"
				"type" 		"int"
			}
			"_inner_cone"
			{
				"fgdName"	"_inner_cone"
				"prop"	"m_InnerAngle"
				"type" 		"float"
			}
			"_cone"
			{
				"fgdName"	"_cone"
				"prop"	"m_OuterAngle"
				"type" 		"float"
			}
			"spotlight_radius"
			{
				"fgdName"	"spotlight_radius"
				"prop"	"m_SpotRadius"
				"type" 		"float"
			}
			"spotlight_radius"
			{
				"fgdName"	"spotlight_radius"
				"prop"	"m_SpotRadius"
				"type" 		"float"
			}
			
			
		}
	
	}
	"point_hurt"
	{
		"extend"	"map_entity"
		"customOnly"	"1"
		"fields"
		{
			"damageRadius"
			{
				"fgdName"	"DamageRadius"
				"prop"	"m_flRadius"
				"type" 		"float"
				"propType"	"data"
			}
			"damage"
			{
				"fgdName"	"Damage"
				"prop"	"m_nDamage"
				"type" 		"int"
				"propType"	"data"
			}
			"damageDelay"
			{
				"fgdName"	"DamageDelay"
				"prop"	"m_flDelay"
				"type" 		"float"
				"propType"	"data"
			}
			"damageType"
			{
				"fgdName"	"DamageType"
				"prop"	"m_bitsDamageType"
				"type" 		"int"
				"propType"	"data"
			}
			"damageTarget"
			{
				"fgdName"	"DamageTarget"
				"prop"	"m_strTarget"
				"type" 		"string"
				"defaultValue"	""
				"propType"	"data"
			}
			"team"
			{
				"prop" 	"m_iTeamNum"
				"type" 		"int"
			}
			
		}
	
	}
	"env_fire"
	{
		"extend"	"map_entity"
		"version"	"0.80"
		"fields"
		{
			"fireType"
			{
				"fgdName"	"firetype"
				"prop" 	"m_nFireType"
				"type" 		"int"
				"propType"	"data"
			}
			"fireSize"
			{
				"fgdName"	"firesize"
				"prop" 	"m_flFireSize"
				"type" 		"float"
				"propType"	"data"
			}
			"damageScale"
			{
				"fgdName"	"damagescale"
				"prop" 	"m_flDamageScale"
				"type" 		"float"
				"propType"	"data"
			}
			"duration"
			{
				"fgdName"	"health"
				"prop"	"m_iHealth"
				"type" 		"int"
				"propType"	"data"
			}
			
		}
	
	}
	"info_particle_system"
	{
		"extend"	"map_entity"
		"version"	"0.80"
		"customOnly"	"1"
		"fields"
		{
			"active"
			{
				"fgdName"	"start_active"
				"prop" 	"m_bActive"
				"type" 		"int"
				"propType"	"data"
			}
			"effectName"
			{
				"fgdName"	"effect_name"
				"prop" 	"m_iszEffectName"
				"type" 		"string"
				"propType"	"data"
			}
			"color"
			{
				"ignore"	"true"
			}
			
		}
	
	}
	
	
	"emp_comm_restrict"
	{
		"extend"	"brush"
		"version"	"1.04"
		"moveable"	"0"
	}
	"emp_eng_restrict"
	{
		"extend"	"brush"
		"version"	"1.04"
		"moveable"	"0"
		"fields"
		{
			"restrictNF"
			{
				"fgdName"	"restrictNF"
				"prop" 	"m_iRestrict_NF"
				"type" 		"int"
				"propType"	"data"
			}
			"restrictImp"
			{
				"fgdName"	"restrictImp"
				"prop" 	"m_iRestrict_Imp"
				"type" 		"int"
				"propType"	"data"
			}
			"turretRestrict"
			{
				"fgdName"	"turretRestrict"
				"prop" 	"m_iTurretRestrict"
				"type" 		"int"
				"propType"	"data"
			}

		}
		
	}
	"emp_info_params"
	{
		"extend"	"entity"
		"version"	"1.08"
		"moveable"	"0"
		"fields"
		{
			"skin"
			{
				"fgdName"	"Skin"
				"prop" 	"m_iDefaultSkin"
				"type" 		"int"
				"propType"	"data"
			}
			"autoResearch"
			{
				"fgdName"	"AutoResearch"
				"prop" 	"m_bResearchComplete"
				"type" 		"int"
				"propType"	"data"
			}
			"eng_restrict_NF"
			{
				"fgdName"	"eng_restrict_NF"
				"prop" 	"m_iEngRestrict_NF"
				"type" 		"int"
				"propType"	"data"
			}
			"eng_restrict_Imp"
			{
				"fgdName"	"eng_restrict_Imp"
				"prop" 	"m_iEngRestrict_Imp"
				"type" 		"int"
				"propType"	"data"
			}
			"turretRestrict"
			{
				"fgdName"	"turretRestrict"
				"prop" 	"m_iTurretRestrict"
				"type" 		"int"
				"propType"	"data"
			}

		}
		
	}
	
	
	
}


